function getColRowCode(det, base = 7){
        let tens = Math.floor((det-1)/base) + 1
        let extra = det % base == 0 ? base : det % base
        return 10 * tens + extra
}

function getNumberName(n){ //currently only works up to 1000
        if (n < 100) return getNumberNameLT100(n)
        if (n < 1000) {
                if (n % 100 == 0) return getNumberNameLT100(n / 100) + " Hundred"
                let hun = getNumberNameLT100(Math.floor(n / 100)) + " Hundred and "
                return hun + getNumberNameLT100(n % 100)
        }
}

function getNumberNameLT100(n){
        let units = {
                1: "One",
                2: "Two",
                3: "Three",
                4: "Four",
                5: "Five",
                6: "Six",
                7: "Seven",
                8: "Eight",
                9: "Nine",
        }
        let tens = {
                2: "Twenty",
                3: "Thirty",
                4: "Forty",
                5: "Fifty",
                6: "Sixty",
                7: "Seventy",
                8: "Eighty",
                9: "Ninety",
        }
        let forced = {
                10: "Ten",
                11: "Eleven",
                12: "Twelve",
                13: "Thirteen",
                14: "Fourteen",
                15: "Fifteen",
                16: "Sixteen",
                17: "Seventeen",
                18: "Eighteen", 
                19: "Nineteen",
        }
        if (forced[n] != undefined) return forced[n]
        if (n == 0) return "Zero"
        if (n % 10 == 0) return tens[n/10]
        if (n < 10) return units[n]
        return tens[Math.floor(n/10)] + "-" + units[n % 10].toLowerCase()
}

function getAchStuffFromNumber(n){
        let name = getNumberName(n)
        let id = getColRowCode(n)
        let done = function(){
                return hasAchievement("ach", id) || PROGRESSION_MILESTONES[n]() 
        }
        let isChall = false
        if (n > 301 && n < 309) isChall = true
        if (n > 323 && n < 330) isChall = true
        let startStr = isChall ? "Complete " : "Get "
        let tooltip = function(){
                return startStr + PROGRESSION_MILESTONES_TEXT[n]
        }
        let style = function(){
                let tens = id - id % 10
                for (i = 1; i <= 7; i++){
                        if (!hasAchievement("ach", tens + i)) return {}
                }
                
                let a = Math.sin(tens/35 + 0) 
                let b = Math.sin(tens/35 + 1.5)
                let c = Math.sin(tens/35 + 3)
                a = convertToB16(Math.floor(a*128) + 128)
                b = convertToB16(Math.floor(b*128) + 128)
                c = convertToB16(Math.floor(c*128) + 128)
                return {"background-color": "#" + String(a) + String(b) + String(c)}
        }
        let unlocked 
        if (n <= 56) {
                unlocked = function(){
                        if (player.ach.hiddenRows >= n/7) return false
                        return true
                }
        } else if (n <= 1111) {
                unlocked = function(){
                        if (player.ach.hiddenRows >= n/7) return false
                        return player.tokens.unlocked
                }
        } else if (n <= Infinity) {
                unlocked = function(){
                        if (player.ach.hiddenRows >= n/7) return false
                        return hasUpgrade("m", 23) || hasUnlockedPast("m")
                }
        } 
        return {name: name, done: done, tooltip: tooltip, unlocked: unlocked, style: style}
}

function getFirstNAchData(n){
        let obj = {}
        for (i = 1; i <= n; i++){
                obj[getColRowCode(i)] = getAchStuffFromNumber(i)
        }
        obj.rows = Math.ceil(n / 7)
        obj.cols = 7
        return obj
}

function hasCompletedFirstNRows(n){
	for (i = 1; i <= n; i++){
		for (j = 1; j <= 7; j++){
			x = String(i) + String(j)
			if (layers.ach.achievements[x] == undefined) return false
			if (!hasAchievement("ach", x)) return false
		}
	}
	return true
}

PROGRESSION_MILESTONES = {
        1:   () => player.h.points.root(1).gte(20),
        2:   () => player.h.points.root(2).gte(20),
        3:   () => player.h.points.root(3).gte(20),
        4:   () => player.h.deuterium.points.gte(Decimal.pow(100, 0)),
        5:   () => player.h.deuterium.points.gte(Decimal.pow(100, 1)),
        6:   () => player.h.atomic_hydrogen.points.div(5).gte(Decimal.pow(100, 0)),
        7:   () => player.h.atomic_hydrogen.points.div(5).gte(Decimal.pow(100, 1)),
        8:   () => player.h.deuterium.points.gte(Decimal.pow(100, 2)),
        9:   () => player.h.deuterium.points.gte(Decimal.pow(100, 3)),
        10:  () => player.h.atomic_hydrogen.points.div(5).gte(Decimal.pow(100, 2)),
        11:  () => player.h.atomic_hydrogen.points.div(5).gte(Decimal.pow(100, 3)),
        12:  () => player.h.points.root(7).gte(10),
        13:  () => player.h.points.root(11).gte(10),
        14:  () => player.h.points.root(15).gte(10),
        15:  () => player.h.points.root(22).gte(10),
        16:  () => player.h.points.root(30).gte(10),
        17:  () => player.h.points.root(42).gte(10),
        18:  () => player.h.points.root(56).gte(10),
        19:  () => player.h.points.root(77).gte(10),
        20:  () => player.h.points.root(101).gte(10),
        21:  () => player.h.points.root(135).gte(10),
        22:  () => player.h.points.root(176).gte(10),
        23:  () => player.h.points.root(231).gte(10),
        24:  () => player.h.points.root(297).gte(10),
        25:  () => player.h.points.root(385).gte(10),
        26:  () => player.h.points.root(490).gte(10),
        27:  () => player.h.points.root(627).gte(10),
        28:  () => player.h.points.root(792).gte(10),
        29:  () => player.c.points.root(1).gte(10),
        30:  () => player.c.points.root(2).gte(10),
        31:  () => player.c.points.root(3).gte(10),
        32:  () => player.c.points.root(4).gte(10),
        33:  () => player.c.points.root(5).gte(10),
        34:  () => player.c.points.root(6).gte(10),
        35:  () => player.c.points.root(7).gte(10),
        36:  () => player.o.points.root(1).gte(10),
        37:  () => player.o.points.root(2).gte(10),
        38:  () => player.o.points.root(3).gte(10),
        39:  () => player.o.points.root(4).gte(10),
        40:  () => player.o.points.root(5).gte(10),
        41:  () => player.o.points.root(6).gte(10),
        42:  () => player.o.points.root(7).gte(10),
        43:  () => player.c.points.root(9).gte(10),
        44:  () => player.c.points.root(12).gte(10),
        45:  () => player.c.points.root(15).gte(10),
        46:  () => player.c.points.root(18).gte(10),
        47:  () => player.c.points.root(21).gte(10),
        48:  () => player.c.points.root(24).gte(10),
        49:  () => player.c.points.root(27).gte(10),
        50:  () => player.o.points.root(9).gte(10),
        51:  () => player.o.points.root(12).gte(10),
        52:  () => player.o.points.root(15).gte(10),
        53:  () => player.o.points.root(18).gte(10),
        54:  () => player.o.points.root(21).gte(10),
        55:  () => player.o.points.root(24).gte(10),
        56:  () => player.o.points.root(27).gte(10),
        57:  () => player.tokens.total.gt(0),
        58:  () => player.tokens.total.gt(1),
        59:  () => player.tokens.total.gt(2),
        60:  () => player.tokens.total.gt(3),
        61:  () => player.tokens.total.gt(4),
        62:  () => player.tokens.total.gt(5),
        63:  () => player.tokens.total.gt(6),
        64:  () => player.tokens.total.gt(7),
        65:  () => player.tokens.total.gt(8),
        66:  () => player.tokens.total.gt(9),
        67:  () => player.tokens.total.gt(10),
        68:  () => player.tokens.total.gt(11),
        69:  () => player.tokens.total.gt(12),
        70:  () => player.tokens.total.gt(13),
        71:  () => player.tokens.total.gt(14),
        72:  () => player.tokens.total.gt(15),
        73:  () => player.tokens.total.gt(16),
        74:  () => player.tokens.total.gt(17),
        75:  () => player.tokens.total.gt(18),
        76:  () => player.tokens.total.gt(19),
        77:  () => player.tokens.total.gt(20),
        78:  () => player.tokens.total.gt(21),
        79:  () => player.tokens.total.gt(22),
        80:  () => player.tokens.total.gt(23),
        81:  () => player.tokens.total.gt(24),
        82:  () => player.tokens.total.gt(25),
        83:  () => player.tokens.total.gt(26),
        84:  () => player.tokens.total.gt(27),
        85:  () => player.tokens.total.gt(28),
        86:  () => player.tokens.total.gt(29),
        87:  () => player.tokens.total.gt(30),
        88:  () => player.tokens.total.gt(31),
        89:  () => player.tokens.total.gt(32),
        90:  () => player.tokens.total.gt(33),
        91:  () => player.tokens.total.gt(34),
        92:  () => player.tokens.total.gt(35),
        93:  () => player.tokens.total.gt(36),
        94:  () => player.tokens.total.gt(37),
        95:  () => player.tokens.total.gt(38),
        96:  () => player.tokens.total.gt(39),
        97:  () => player.tokens.total.gt(40),
        98:  () => player.tokens.total.gt(41),
        99:  () => player.tokens.total.gt(42),
        100: () => player.tokens.total.gt(43),
        101: () => player.tokens.total.gt(44),
        102: () => player.tokens.total.gt(45),
        103: () => player.tokens.total.gt(46),
        104: () => player.tokens.total.gt(47),
        105: () => player.tokens.total.gt(48),
        106: () => player.tokens.total.gt(49),
        107: () => player.tokens.total.gt(50),
        108: () => player.tokens.total.gt(51),
        109: () => player.tokens.total.gt(52),
        110: () => player.tokens.total.gt(53),
        111: () => player.tokens.total.gt(54),
        112: () => player.tokens.total.gt(55),
        113: () => player.tokens.total.gt(56),
        114: () => player.tokens.total.gt(57),
        115: () => player.tokens.total.gt(58),
        116: () => player.tokens.total.gt(59),
        117: () => player.tokens.total.gt(60),
        118: () => player.tokens.total.gt(61),
        119: () => player.tokens.total.gt(62),
        120: () => player.tokens.total.gt(63),
        121: () => player.tokens.total.gt(64),
        122: () => player.tokens.total.gt(65),
        123: () => player.tokens.total.gt(66),
        124: () => player.tokens.total.gt(67),
        125: () => player.tokens.total.gt(68),
        126: () => player.tokens.total.gt(69),
        127: () => player.tokens.total.gt(70),
        128: () => player.tokens.total.gt(71),
        129: () => player.tokens.total.gt(72),
        130: () => player.tokens.total.gt(73),
        131: () => player.tokens.total.gt(74),
        132: () => player.tokens.total.gt(75),
        133: () => player.tokens.total.gt(76),
        134: () => player.tokens.total.gt(77),
        135: () => player.tokens.total.gt(78),
        136: () => player.tokens.total.gt(79),
        137: () => player.tokens.total.gt(80),
        138: () => player.tokens.total.gt(81),
        139: () => player.tokens.total.gt(82),
        140: () => player.tokens.total.gt(83),
        141: () => player.n.points.max(10).log10().gt(7),
        142: () => player.n.points.max(10).log10().gt(10),
        143: () => player.n.points.max(10).log10().gt(15),
        144: () => player.n.points.max(10).log10().gt(20),
        145: () => player.n.points.max(10).log10().gt(27),
        146: () => player.n.points.max(10).log10().gt(35),
        147: () => player.n.points.max(10).log10().gt(45),
        148: () => player.tokens.total.gt(84),
        149: () => player.tokens.total.gt(85),
        150: () => player.tokens.total.gt(86),
        151: () => player.tokens.total.gt(87),
        152: () => player.tokens.total.gt(88),
        153: () => player.tokens.total.gt(89),
        154: () => player.tokens.total.gt(90),
        155: () => player.p.points.gt(Decimal.pow(10, 1)),
        156: () => player.p.points.gt(Decimal.pow(10, 2)),
        157: () => player.p.points.gt(Decimal.pow(10, 4)),
        158: () => player.p.points.gt(Decimal.pow(10, 8)),
        159: () => player.p.points.gt(Decimal.pow(10, 16)),
        160: () => player.p.points.gt(Decimal.pow(10, 32)),
        161: () => player.p.points.gt(Decimal.pow(10, 64)),
        162: () => player.mu.points.gte(7),
        163: () => player.mu.points.gte(14),
        164: () => player.mu.points.gte(21),
        165: () => player.mu.points.gte(28),
        166: () => player.mu.points.gte(35),
        167: () => player.mu.points.gte(42),
        168: () => player.mu.points.gte(49),
        169: () => player.mu.points.gte(56),
        170: () => player.mu.points.gte(63),
        171: () => player.mu.points.gte(70),
        172: () => player.mu.points.gte(77),
        173: () => player.mu.points.gte(84),
        174: () => player.mu.points.gte(91),
        175: () => player.mu.points.gte(98),
        176: () => player.l.total.gte(1),
        177: () => player.l.total.gte(2),
        178: () => player.l.total.gte(3),
        179: () => player.l.total.gte(4),
        180: () => player.l.total.gte(5),
        181: () => player.l.total.gte(6),
        182: () => player.l.total.gte(7),
        183: () => player.l.total.gte(Decimal.pow(10, 1)),
        184: () => player.l.total.gte(Decimal.pow(10, 2)),
        185: () => player.l.total.gte(Decimal.pow(10, 3)),
        186: () => player.l.total.gte(Decimal.pow(10, 4)),
        187: () => player.l.total.gte(Decimal.pow(10, 5)),
        188: () => player.l.total.gte(Decimal.pow(10, 6)),
        189: () => player.l.total.gte(Decimal.pow(10, 7)),
        190: () => player.l.total.gte(Decimal.pow(10, 8)),
        191: () => player.l.total.gte(Decimal.pow(10, 9)),
        192: () => player.l.total.gte(Decimal.pow(10, 10)),
        193: () => player.l.total.gte(Decimal.pow(10, 11)),
        194: () => player.l.total.gte(Decimal.pow(10, 12)),
        195: () => player.l.total.gte(Decimal.pow(10, 13)),
        196: () => player.l.total.gte(Decimal.pow(10, 14)),
        197: () => player.l.challenges[11] >= 2,
        198: () => player.l.challenges[11] >= 6,
        199: () => player.l.challenges[11] >= 10,
        200: () => player.l.challenges[11] >= 14,
        201: () => player.l.challenges[11] >= 18,
        202: () => player.l.challenges[11] >= 22,
        203: () => player.l.challenges[11] >= 26,
        204: () => player.l.challenges[11] >= 30,
        205: () => player.l.challenges[11] >= 34,
        206: () => player.l.challenges[11] >= 38,
        207: () => player.l.challenges[11] >= 42,
        208: () => player.l.challenges[11] >= 46,
        209: () => player.l.challenges[11] >= 50,
        210: () => player.l.challenges[11] >= 54,
        211: () => player.l.challenges[11] >= 58,
        212: () => player.l.challenges[11] >= 62,
        213: () => player.l.challenges[11] >= 66,
        214: () => player.l.challenges[11] >= 70,
        215: () => player.l.challenges[11] >= 74,
        216: () => player.l.challenges[11] >= 78,
        217: () => player.l.challenges[11] >= 82,
        218: () => player.l.challenges[11] >= 86,
        219: () => player.l.challenges[11] >= 90,
        220: () => player.l.challenges[11] >= 94,
        221: () => player.l.challenges[11] >= 98,
        222: () => player.l.challenges[11] >= 102,
        223: () => player.l.challenges[11] >= 106,
        224: () => player.l.challenges[11] >= 110,
        225: () => player.l.grid[102].gems.gt(0),
        226: () => player.l.grid[201].gems.gt(0),
        227: () => player.l.grid[202].gems.gt(0),
        228: () => player.l.grid[103].gems.gt(0),
        229: () => player.l.grid[203].gems.gt(0),
        230: () => player.l.grid[301].gems.gt(0),
        231: () => player.l.grid[302].gems.gt(0),
        232: () => player.l.grid[303].gems.gt(0),
        233: () => player.a.points.gte(2),
        234: () => player.a.points.gte(4),
        235: () => player.a.points.gte(8),
        236: () => player.a.points.gte(16),
        237: () => player.a.points.gte(32),
        238: () => player.a.points.gte(64),
        239: () => player.l.grid[104].gems.gt(0),
        240: () => player.l.grid[204].gems.gt(0),
        241: () => player.l.grid[304].gems.gt(0),
        242: () => player.l.grid[401].gems.gt(0),
        243: () => player.l.grid[402].gems.gt(0),
        244: () => player.l.grid[403].gems.gt(0),
        245: () => player.l.grid[404].gems.gt(0),
        246: () => player.l.grid[105].gems.gt(0),
        247: () => player.l.grid[205].gems.gt(0),
        248: () => player.l.grid[305].gems.gt(0),
        249: () => player.l.grid[405].gems.gt(0),
        250: () => player.l.grid[501].gems.gt(0),
        251: () => player.l.grid[502].gems.gt(0),
        252: () => player.l.grid[503].gems.gt(0),
        253: () => player.l.grid[504].gems.gt(0),
        254: () => player.l.grid[505].gems.gt(0),
        255: () => player.a.points.gte(1e2),
        256: () => player.a.points.gte(1e4),
        257: () => player.a.points.gte(1e8),
        258: () => player.a.points.gte(1e16),
        259: () => player.a.points.gte(1e32),
        260: () => player.a.protein.points.gte("1e1"),
        261: () => player.a.protein.points.gte("1e2"),
        262: () => player.a.protein.points.gte("1e4"),
        263: () => player.a.protein.points.gte("1e8"),
        264: () => player.a.protein.points.gte("1e16"),
        265: () => player.a.protein.points.gte("1e32"),
        266: () => player.a.protein.points.gte("1e64"),
        267: () => player.a.protein.points.gte("1e128"),
        268: () => player.a.protein.points.gte("1e256"),
        269: () => player.a.protein.points.gte("1e512"),
        270: () => player.a.protein.points.gte("1e1024"),
        271: () => player.a.protein.points.gte("1e2048"),
        272: () => player.a.protein.points.gte("1e4096"),
        273: () => player.a.protein.points.gte("1e8192"),
        274: () => player.a.protein.points.gte("1e1e4"),
        275: () => player.a.protein.points.gte("1e2e4"),
        276: () => player.a.protein.points.gte("1e5e4"),
        277: () => player.a.protein.points.gte("1e1e5"),
        278: () => player.a.protein.points.gte("1e2e5"),
        279: () => player.a.protein.points.gte("1e5e5"),
        280: () => player.a.protein.points.gte("1e1e6"),
        281: () => player.a.protein.points.gte("1e2e6"),
        282: () => player.a.protein.points.gte("1e5e6"),
        283: () => player.a.protein.points.gte("1e1e7"),
        284: () => player.a.protein.points.gte("1e2e7"),
        285: () => player.a.protein.points.gte("1e5e7"),
        286: () => player.a.protein.points.gte("1e1e8"),
        287: () => player.a.protein.points.gte("1e2e8"),
        288: () => player.a.protein.points.gte("1e5e8"),
        289: () => player.a.protein.points.gte("1e1e9"),
        290: () => player.a.protein.points.gte("1e2e9"),
        291: () => player.a.protein.points.gte("1e5e9"),
        292: () => player.a.protein.points.gte("1e1e10"),
        293: () => player.a.protein.points.gte("1e2e10"),
        294: () => player.a.protein.points.gte("1e5e10"),
        295: () => player.d.points.gte(1),
        296: () => player.d.points.gte(3),
        297: () => player.d.points.gte(5),
        298: () => player.d.points.gte(17),
        299: () => player.d.points.gte(257),
        300: () => player.d.points.gte(65537),
        301: () => player.d.points.gte(4294967297),
        302: () => hasChallenge("l", 21),
        303: () => hasChallenge("l", 22),
        304: () => hasChallenge("l", 31),
        305: () => hasChallenge("l", 32),
        306: () => hasChallenge("l", 41),
        307: () => hasChallenge("l", 42),
        308: () => hasChallenge("l", 51),
        309: () => player.l.grid[106].gems.gt(0),
        310: () => player.l.grid[206].gems.gt(0),
        311: () => player.l.grid[306].gems.gt(0),
        312: () => player.l.grid[406].gems.gt(0),
        313: () => player.l.grid[506].gems.gt(0),
        314: () => player.l.grid[601].gems.gt(0),
        315: () => player.l.grid[602].gems.gt(0),
        316: () => player.l.grid[603].gems.gt(0),
        317: () => player.l.grid[604].gems.gt(0),
        318: () => player.l.grid[605].gems.gt(0),
        319: () => player.l.grid[606].gems.gt(0),
        320: () => player.d.points.gte(Decimal.pow(2, Decimal.pow(2, 6))),
        321: () => player.d.points.gte(Decimal.pow(2, Decimal.pow(2, 7))),
        322: () => player.d.points.gte(Decimal.pow(2, Decimal.pow(2, 8))),
        323: () => hasChallenge("l", 52),
        324: () => hasChallenge("l", 61),
        325: () => hasChallenge("l", 62),
        326: () => hasChallenge("l", 71),
        327: () => hasChallenge("l", 72),
        328: () => hasChallenge("l", 81),
        329: () => hasChallenge("l", 82),
        330: () => player.l.grid[107].gems.gt(0),
        331: () => player.l.grid[207].gems.gt(0),
        332: () => player.l.grid[307].gems.gt(0),
        333: () => player.l.grid[407].gems.gt(0),
        334: () => player.l.grid[507].gems.gt(0),
        335: () => player.l.grid[607].gems.gt(0),
        336: () => player.l.grid[701].gems.gt(0),
        337: () => player.l.grid[702].gems.gt(0),
        338: () => player.l.grid[703].gems.gt(0),
        339: () => player.l.grid[704].gems.gt(0),
        340: () => player.l.grid[705].gems.gt(0),
        341: () => player.l.grid[706].gems.gt(0),
        342: () => player.l.grid[707].gems.gt(0),
        343: () => player.l.grid[108].gems.gt(0),
        344: () => player.l.grid[208].gems.gt(0),
        345: () => player.l.grid[308].gems.gt(0),
        346: () => player.l.grid[408].gems.gt(0),
        347: () => player.l.grid[508].gems.gt(0),
        348: () => player.l.grid[608].gems.gt(0),
        349: () => player.l.grid[708].gems.gt(0),
        350: () => player.l.grid[801].gems.gt(0),
        351: () => player.l.grid[802].gems.gt(0),
        352: () => player.l.grid[803].gems.gt(0),
        353: () => player.l.grid[804].gems.gt(0),
        354: () => player.l.grid[805].gems.gt(0),
        355: () => player.l.grid[806].gems.gt(0),
        356: () => player.l.grid[807].gems.gt(0),
        357: () => player.l.grid[808].gems.gt(0),
        358: () => player.d.points.gte(Decimal.pow(2, Decimal.pow(2, 9))),
        359: () => player.d.points.gte(Decimal.pow(2, Decimal.pow(2, 10))),
        360: () => player.d.points.gte(Decimal.pow(2, Decimal.pow(2, 11))),
        361: () => player.a.protein.points.gte("1e1e11"),
        362: () => player.a.protein.points.gte("1e2e11"),
        363: () => player.a.protein.points.gte("1e5e11"),
        364: () => player.a.protein.points.gte("1e1e12"),
        365: () => player.cells.points.gte(1),
        366: () => player.cells.points.gte(2),
        367: () => player.cells.points.gte(5),
        368: () => player.cells.points.gte(14),
        369: () => player.cells.points.gte(42),
        370: () => player.cells.points.gte(132),
        371: () => player.cells.points.gte(429),
        372: () => player.d.points.gte(Decimal.pow(2, Decimal.pow(2, 12))),
        373: () => player.d.points.gte(Decimal.pow(2, Decimal.pow(2, 13))),
        374: () => player.d.points.gte(Decimal.pow(2, Decimal.pow(2, 14))),
        375: () => player.d.points.gte(Decimal.pow(2, Decimal.pow(2, 15))),
        376: () => player.d.points.gte(Decimal.pow(2, Decimal.pow(2, 16))),
        377: () => player.d.points.gte(Decimal.pow(2, Decimal.pow(2, 17))),
        378: () => player.d.points.gte(Decimal.pow(2, Decimal.pow(2, 18))),
        379: () => player.a.protein.points.gte("1e1e13"),
        380: () => player.a.protein.points.gte("1e3e13"),
        381: () => player.a.protein.points.gte("1e1e14"),
        382: () => player.a.protein.points.gte("1e3e14"),
        383: () => player.a.protein.points.gte("1e1e15"),
        384: () => player.a.protein.points.gte("1e3e15"),
        385: () => player.a.protein.points.gte("1e1e16"),
        386: () => player.cells.mu.points.gte(Decimal.pow(10, Decimal.pow(2, 0))),
        387: () => player.cells.mu.points.gte(Decimal.pow(10, Decimal.pow(2, 1))),
        388: () => player.cells.mu.points.gte(Decimal.pow(10, Decimal.pow(2, 2))),
        389: () => player.cells.mu.points.gte(Decimal.pow(10, Decimal.pow(2, 3))),
        390: () => player.cells.mu.points.gte(Decimal.pow(10, Decimal.pow(2, 4))),
        391: () => player.cells.mu.points.gte(Decimal.pow(10, Decimal.pow(2, 5))),
        392: () => player.cells.mu.points.gte(Decimal.pow(10, Decimal.pow(2, 6))),
        393: () => player.cells.lambda.points.gte(Decimal.pow(10, Decimal.pow(2, 0))),
        394: () => player.cells.lambda.points.gte(Decimal.pow(10, Decimal.pow(2, 1))),
        395: () => player.cells.lambda.points.gte(Decimal.pow(10, Decimal.pow(2, 2))),
        396: () => player.cells.lambda.points.gte(Decimal.pow(10, Decimal.pow(2, 3))),
        397: () => player.cells.lambda.points.gte(Decimal.pow(10, Decimal.pow(2, 4))),
        398: () => player.cells.lambda.points.gte(Decimal.pow(10, Decimal.pow(2, 5))),
        399: () => player.cells.lambda.points.gte(Decimal.pow(10, Decimal.pow(2, 6))),
        400: () => player.cells.kappa.points.gte(Decimal.pow(10, Decimal.pow(2, 0))),
        401: () => player.cells.kappa.points.gte(Decimal.pow(10, Decimal.pow(2, 1))),
        402: () => player.cells.kappa.points.gte(Decimal.pow(10, Decimal.pow(2, 2))),
        403: () => player.cells.kappa.points.gte(Decimal.pow(10, Decimal.pow(2, 3))),
        404: () => player.cells.kappa.points.gte(Decimal.pow(10, Decimal.pow(2, 4))),
        405: () => player.cells.kappa.points.gte(Decimal.pow(10, Decimal.pow(2, 5))),
        406: () => player.cells.kappa.points.gte(Decimal.pow(10, Decimal.pow(2, 6))),
        407: () => player.cells.iota.points.gte(Decimal.pow(10, Decimal.pow(2, 0))),
        408: () => player.cells.iota.points.gte(Decimal.pow(10, Decimal.pow(2, 1))),
        409: () => player.cells.iota.points.gte(Decimal.pow(10, Decimal.pow(2, 2))),
        410: () => player.cells.iota.points.gte(Decimal.pow(10, Decimal.pow(2, 3))),
        411: () => player.cells.iota.points.gte(Decimal.pow(10, Decimal.pow(2, 4))),
        412: () => player.cells.iota.points.gte(Decimal.pow(10, Decimal.pow(2, 5))),
        413: () => player.cells.iota.points.gte(Decimal.pow(10, Decimal.pow(2, 6))),
        414: () => player.a.protein.points.gte("1e3e16"),
        415: () => player.a.protein.points.gte("1e1e17"),
        416: () => player.a.protein.points.gte("1e3e17"),
        417: () => player.a.protein.points.gte("1e1e18"),
        418: () => player.a.protein.points.gte("1e3e18"),
        419: () => player.a.protein.points.gte("1e1e19"),
        420: () => player.a.protein.points.gte("1e3e19"),
        421: () => player.cells.stem_cells.points.gte(Decimal.pow(10, Decimal.pow(2, 0))),
        422: () => player.cells.stem_cells.points.gte(Decimal.pow(10, Decimal.pow(2, 1))),
        423: () => player.cells.stem_cells.points.gte(Decimal.pow(10, Decimal.pow(2, 2))),
        424: () => player.cells.stem_cells.points.gte(Decimal.pow(10, Decimal.pow(2, 3))),
        425: () => player.cells.stem_cells.points.gte(Decimal.pow(10, Decimal.pow(2, 4))),
        426: () => player.cells.stem_cells.points.gte(Decimal.pow(10, Decimal.pow(2, 5))),
        427: () => player.cells.stem_cells.points.gte(Decimal.pow(10, Decimal.pow(2, 6))),
        428: () => player.cells.points.gte(Decimal.pow(10, Decimal.pow(2, 2))),
        429: () => player.cells.points.gte(Decimal.pow(10, Decimal.pow(2, 3))),
        430: () => player.cells.points.gte(Decimal.pow(10, Decimal.pow(2, 4))),
        431: () => player.cells.points.gte(Decimal.pow(10, Decimal.pow(2, 5))),
        432: () => player.cells.points.gte(Decimal.pow(10, Decimal.pow(2, 6))),
        433: () => player.cells.points.gte(Decimal.pow(10, Decimal.pow(2, 7))),
        434: () => player.cells.points.gte(Decimal.pow(10, Decimal.pow(2, 8))),
        435: () => player.cells.stem_cells.points.gte(Decimal.pow(10, Decimal.pow(2, 7))),
        436: () => player.cells.stem_cells.points.gte(Decimal.pow(10, Decimal.pow(2, 8))),
        437: () => player.cells.stem_cells.points.gte(Decimal.pow(10, Decimal.pow(2, 9))),
        438: () => player.cells.stem_cells.points.gte(Decimal.pow(10, Decimal.pow(2, 10))),
        439: () => player.cells.stem_cells.points.gte(Decimal.pow(10, Decimal.pow(2, 11))),
        440: () => player.cells.stem_cells.points.gte(Decimal.pow(10, Decimal.pow(2, 12))),
        441: () => player.cells.stem_cells.points.gte(Decimal.pow(10, Decimal.pow(2, 13))),
        442: () => player.tokens.total.gte(200),
        443: () => player.tokens.total.gte(205),
        444: () => player.tokens.total.gte(210),
        445: () => player.tokens.total.gte(215),
        446: () => player.tokens.total.gte(220),
        447: () => player.tokens.total.gte(225),
        448: () => player.tokens.total.gte(230),
        449: () => player.tokens.total.gte(235),
        450: () => player.tokens.total.gte(240),
        451: () => player.tokens.total.gte(245),
        452: () => player.tokens.total.gte(250),
        453: () => player.tokens.total.gte(255),
        454: () => player.tokens.total.gte(260),
        455: () => player.tokens.total.gte(265),
        456: () => player.tokens.total.gte(270),
        457: () => player.tokens.total.gte(275),
        458: () => player.tokens.total.gte(280),
        459: () => player.tokens.total.gte(285),
        460: () => player.tokens.total.gte(290),
        461: () => player.tokens.total.gte(295),
        462: () => player.tokens.total.gte(300),
        463: () => player.cells.mu.points.gte(Decimal.pow(10, Decimal.pow(2, 7))),
        464: () => player.cells.mu.points.gte(Decimal.pow(10, Decimal.pow(2, 8))),
        465: () => player.cells.mu.points.gte(Decimal.pow(10, Decimal.pow(2, 9))),
        466: () => player.cells.mu.points.gte(Decimal.pow(10, Decimal.pow(2, 10))),
        467: () => player.cells.mu.points.gte(Decimal.pow(10, Decimal.pow(2, 11))),
        468: () => player.cells.mu.points.gte(Decimal.pow(10, Decimal.pow(2, 12))),
        469: () => player.cells.mu.points.gte(Decimal.pow(10, Decimal.pow(2, 13))),
        470: () => player.cells.lambda.points.gte(Decimal.pow(10, Decimal.pow(2, 7))),
        471: () => player.cells.lambda.points.gte(Decimal.pow(10, Decimal.pow(2, 8))),
        472: () => player.cells.lambda.points.gte(Decimal.pow(10, Decimal.pow(2, 9))),
        473: () => player.cells.lambda.points.gte(Decimal.pow(10, Decimal.pow(2, 10))),
        474: () => player.cells.lambda.points.gte(Decimal.pow(10, Decimal.pow(2, 11))),
        475: () => player.cells.lambda.points.gte(Decimal.pow(10, Decimal.pow(2, 12))),
        476: () => player.cells.lambda.points.gte(Decimal.pow(10, Decimal.pow(2, 13))),
        477: () => player.cells.kappa.points.gte(Decimal.pow(10, Decimal.pow(2, 7))),
        478: () => player.cells.kappa.points.gte(Decimal.pow(10, Decimal.pow(2, 8))),
        479: () => player.cells.kappa.points.gte(Decimal.pow(10, Decimal.pow(2, 9))),
        480: () => player.cells.kappa.points.gte(Decimal.pow(10, Decimal.pow(2, 10))),
        481: () => player.cells.kappa.points.gte(Decimal.pow(10, Decimal.pow(2, 11))),
        482: () => player.cells.kappa.points.gte(Decimal.pow(10, Decimal.pow(2, 12))),
        483: () => player.cells.kappa.points.gte(Decimal.pow(10, Decimal.pow(2, 13))),
        484: () => player.cells.iota.points.gte(Decimal.pow(10, Decimal.pow(2, 7))),
        485: () => player.cells.iota.points.gte(Decimal.pow(10, Decimal.pow(2, 8))),
        486: () => player.cells.iota.points.gte(Decimal.pow(10, Decimal.pow(2, 9))),
        487: () => player.cells.iota.points.gte(Decimal.pow(10, Decimal.pow(2, 10))),
        488: () => player.cells.iota.points.gte(Decimal.pow(10, Decimal.pow(2, 11))),
        489: () => player.cells.iota.points.gte(Decimal.pow(10, Decimal.pow(2, 12))),
        490: () => player.cells.iota.points.gte(Decimal.pow(10, Decimal.pow(2, 13))),
        491: () => player.cells.points.gte(Decimal.pow(10, Decimal.pow(2, 9))),
        492: () => player.cells.points.gte(Decimal.pow(10, Decimal.pow(2, 10))),
        493: () => player.cells.points.gte(Decimal.pow(10, Decimal.pow(2, 11))),
        494: () => player.cells.points.gte(Decimal.pow(10, Decimal.pow(2, 12))),
        495: () => player.cells.points.gte(Decimal.pow(10, Decimal.pow(2, 13))),
        496: () => player.cells.points.gte(Decimal.pow(10, Decimal.pow(2, 14))),
        497: () => player.cells.points.gte(Decimal.pow(10, Decimal.pow(2, 15))),
        498: () => player.tokens.total.gte(305),
        499: () => player.tokens.total.gte(310),
        500: () => player.tokens.total.gte(315),
        501: () => player.tokens.total.gte(320),
        502: () => player.tokens.total.gte(325),
        503: () => player.tokens.total.gte(330),
        504: () => player.tokens.total.gte(335),
        505: () => player.cells.stem_cells.points.gte(Decimal.pow(10, Decimal.pow(2, 14))),
        506: () => player.cells.stem_cells.points.gte(Decimal.pow(10, Decimal.pow(2, 15))),
        507: () => player.cells.stem_cells.points.gte(Decimal.pow(10, Decimal.pow(2, 16))),
        508: () => player.cells.stem_cells.points.gte(Decimal.pow(10, Decimal.pow(2, 17))),
        509: () => player.cells.stem_cells.points.gte(Decimal.pow(10, Decimal.pow(2, 18))),
        510: () => player.cells.stem_cells.points.gte(Decimal.pow(10, Decimal.pow(2, 19))),
        511: () => player.cells.stem_cells.points.gte(Decimal.pow(10, Decimal.pow(2, 20))),
        512: () => player.tokens.total.gte(340),
        513: () => player.tokens.total.gte(345),
        514: () => player.tokens.total.gte(350),
        515: () => player.tokens.total.gte(355),
        516: () => player.tokens.total.gte(360),
        517: () => player.tokens.total.gte(365),
        518: () => player.tokens.total.gte(370),
        519: () => player.t.upgrades.length >= 1,
        520: () => player.t.upgrades.length >= 4,
        521: () => player.t.upgrades.length >= 9,
        522: () => player.t.upgrades.length >= 16,
        523: () => player.t.upgrades.length >= 25,
        524: () => player.t.upgrades.length >= 36,
        525: () => player.t.upgrades.length >= 49,
        526: () => player.tokens.total.gte(380),
        527: () => player.tokens.total.gte(390),
        528: () => player.tokens.total.gte(400),
        529: () => player.tokens.total.gte(410),
        530: () => player.tokens.total.gte(420),
        531: () => player.tokens.total.gte(430),
        532: () => player.tokens.total.gte(440),
        533: () => player.tokens.tokens2.total.gte(1),
        534: () => player.tokens.tokens2.total.gte(2),
        535: () => player.tokens.tokens2.total.gte(3),
        536: () => player.tokens.tokens2.total.gte(4),
        537: () => player.tokens.tokens2.total.gte(5),
        538: () => player.tokens.tokens2.total.gte(6),
        539: () => player.tokens.tokens2.total.gte(7),
        540: () => player.tokens.tokens2.total.gte(8),
        541: () => player.tokens.tokens2.total.gte(9),
        542: () => player.tokens.tokens2.total.gte(10),
        543: () => player.tokens.tokens2.total.gte(11),
        544: () => player.tokens.tokens2.total.gte(12),
        545: () => player.tokens.tokens2.total.gte(13),
        546: () => player.tokens.tokens2.total.gte(14),
        547: () => player.tokens.tokens2.total.gte(15),
        548: () => player.tokens.tokens2.total.gte(16),
        549: () => player.tokens.tokens2.total.gte(17),
        550: () => player.tokens.tokens2.total.gte(18),
        551: () => player.tokens.tokens2.total.gte(19),
        552: () => player.tokens.tokens2.total.gte(20),
        553: () => player.tokens.tokens2.total.gte(21),
        554: () => player.tokens.tokens2.total.gte(22),
        555: () => player.tokens.tokens2.total.gte(23),
        556: () => player.tokens.tokens2.total.gte(24),
        557: () => player.tokens.tokens2.total.gte(25),
        558: () => player.tokens.tokens2.total.gte(26),
        559: () => player.tokens.tokens2.total.gte(27),
        560: () => player.tokens.tokens2.total.gte(28),
        561: () => player.tokens.tokens2.total.gte(29),
        562: () => player.tokens.tokens2.total.gte(30),
        563: () => player.tokens.tokens2.total.gte(31),
        564: () => player.tokens.tokens2.total.gte(32),
        565: () => player.tokens.tokens2.total.gte(33),
        566: () => player.tokens.tokens2.total.gte(34),
        567: () => player.tokens.tokens2.total.gte(35),
        568: () => player.tokens.tokens2.total.gte(36),
        569: () => player.tokens.tokens2.total.gte(37),
        570: () => player.tokens.tokens2.total.gte(38),
        571: () => player.tokens.tokens2.total.gte(39),
        572: () => player.tokens.tokens2.total.gte(40),
        573: () => player.tokens.tokens2.total.gte(41),
        574: () => player.tokens.tokens2.total.gte(42),

        575: () => player.or.total.gte(1),
        576: () => player.or.total.gte(2),
        577: () => player.or.total.gte(3),
        578: () => player.or.total.gte(4),
        579: () => player.or.total.gte(5),
        580: () => player.or.total.gte(6),
        581: () => player.or.total.gte(7),
        582: () => player.tokens.tokens2.total.gte(45),
        583: () => player.tokens.tokens2.total.gte(50),
        584: () => player.tokens.tokens2.total.gte(55),
        585: () => player.tokens.tokens2.total.gte(60),
        586: () => player.tokens.tokens2.total.gte(65),
        587: () => player.tokens.tokens2.total.gte(70),
        588: () => player.tokens.tokens2.total.gte(75),
}

PROGRESSION_MILESTONES_TEXT = {
        1:   "20 Hydrogen",
        2:   "400 Hydrogen",
        3:   "8000 Hydrogen",
        4:   "1 Deuterium",
        5:   "100 Deuterium",
        6:   "5 Atomic Hydrogen",
        7:   "500 Atomic Hydrogen",
        8:   "10,000 Deuterium",
        9:   "1e6 Deuterium",
        10:  "50,000 Atomic Hydrogen",
        11:  "5e6 Atomic Hydrogen",
        12:  "1e7 Hydrogen",
        13:  "1e11 Hydrogen",
        14:  "1e15 Hydrogen",
        15:  "1e22 Hydrogen",
        16:  "1e30 Hydrogen",
        17:  "1e42 Hydrogen",
        18:  "1e56 Hydrogen",
        19:  "1e77 Hydrogen",
        20:  "1e101 Hydrogen",
        21:  "1e135 Hydrogen",
        22:  "1e176 Hydrogen",
        23:  "1e231 Hydrogen",
        24:  "1e297 Hydrogen",
        25:  "1e385 Hydrogen",
        26:  "1e490 Hydrogen",
        27:  "1e627 Hydrogen",
        28:  "1e792 Hydrogen",
        29:  "10 Carbon",
        30:  "100 Carbon",
        31:  "1,000 Carbon",
        32:  "1e4 Carbon",
        33:  "1e5 Carbon",
        34:  "1e6 Carbon",
        35:  "1e7 Carbon",
        36:  "10 Oxygen",
        37:  "100 Oxygen",
        38:  "1,000 Oxygen",
        39:  "1e4 Oxygen",
        40:  "1e5 Oxygen",
        41:  "1e6 Oxygen",
        42:  "1e7 Oxygen",
        43:  "1e9 Carbon",
        44:  "1e12 Carbon",
        45:  "1e15 Carbon",
        46:  "1e18 Carbon",
        47:  "1e21 Carbon",
        48:  "1e24 Carbon",
        49:  "1e27 Carbon",
        50:  "1e9 Oxygen",
        51:  "1e12 Oxygen",
        52:  "1e15 Oxygen",
        53:  "1e18 Oxygen",
        54:  "1e21 Oxygen",
        55:  "1e24 Oxygen",
        56:  "1e27 Oxygen",
        57:  "a token",
        58:  "2 tokens",
        59:  "3 tokens",
        60:  "4 tokens",
        61:  "5 tokens",
        62:  "6 tokens",
        63:  "7 tokens",
        64:  "8 tokens",
        65:  "9 tokens",
        66:  "10 tokens",
        67:  "11 tokens",
        68:  "12 tokens",
        69:  "13 tokens",
        70:  "14 tokens",
        71:  "15 tokens",
        72:  "16 tokens",
        73:  "17 tokens",
        74:  "18 tokens",
        75:  "19 tokens",
        76:  "20 tokens",
        77:  "21 tokens",
        78:  "22 tokens",
        79:  "23 tokens",
        80:  "24 tokens",
        81:  "25 tokens",
        82:  "26 tokens",
        83:  "27 tokens",
        84:  "28 tokens",
        85:  "29 tokens",
        86:  "30 tokens",
        87:  "31 tokens",
        88:  "32 tokens",
        89:  "33 tokens",
        90:  "34 tokens",
        91:  "35 tokens",
        92:  "36 tokens",
        93:  "37 tokens",
        94:  "38 tokens",
        95:  "39 tokens",
        96:  "40 tokens",
        97:  "41 tokens",
        98:  "42 tokens",
        99:  "43 tokens",
        100: "44 tokens",
        101: "45 tokens",
        102: "46 tokens",
        103: "47 tokens",
        104: "48 tokens",
        105: "49 tokens",
        106: "50 tokens",
        107: "51 tokens",
        108: "52 tokens",
        109: "53 tokens",
        110: "54 tokens",
        111: "55 tokens",
        112: "56 tokens",
        113: "57 tokens",
        114: "58 tokens",
        115: "59 tokens",
        116: "60 tokens",
        117: "61 tokens",
        118: "62 tokens",
        119: "63 tokens",
        120: "64 tokens",
        121: "65 tokens",
        122: "66 tokens",
        123: "67 tokens",
        124: "68 tokens",
        125: "69 tokens",
        126: "70 tokens",
        127: "71 tokens",
        128: "72 tokens",
        129: "73 tokens",
        130: "74 tokens",
        131: "75 tokens",
        132: "76 tokens",
        133: "77 tokens",
        134: "78 tokens",
        135: "79 tokens",
        136: "80 tokens",
        137: "81 tokens",
        138: "82 tokens",
        139: "83 tokens",
        140: "84 tokens",
        141: "1e7 Nitrogen",
        142: "1e10 Nitrogen",
        143: "1e15 Nitrogen",
        144: "1e20 Nitrogen",
        145: "1e27 Nitrogen",
        146: "1e35 Nitrogen",
        147: "1e45 Nitrogen",
        148: "85 tokens",
        149: "86 tokens",
        150: "87 tokens",
        151: "88 tokens",
        152: "89 tokens",
        153: "90 tokens",
        154: "91 tokens",
        155: "10 Phosphorus",
        156: "100 Phosphorus",
        157: "1e4 Phosphorus",
        158: "1e8 Phosphorus",
        159: "1e16 Phosphorus",
        160: "1e32 Phosphorus",
        161: "1e64 Phosphorus",
        162: "7 µ",
        163: "14 µ",
        164: "21 µ",
        165: "28 µ",
        166: "35 µ",
        167: "42 µ",
        168: "49 µ",
        169: "56 µ",
        170: "63 µ",
        171: "70 µ",
        172: "77 µ",
        173: "84 µ",
        174: "91 µ",
        175: "98 µ",
        176: "a life :(",
        177: "2 lives",
        178: "3 lives",
        179: "4 lives",
        180: "5 lives",
        181: "6 lives",
        182: "7 lives",
        183: "10 lives",
        184: "100 lives",
        185: "1e3 lives",
        186: "1e4 lives",
        187: "1e5 lives",
        188: "1e6 lives",
        189: "1e7 lives",
        190: "1e8 lives",
        191: "1e9 lives",
        192: "1e10 lives",
        193: "1e11 lives",
        194: "1e12 lives",
        195: "1e13 lives",
        196: "1e14 lives",
        197: "2 Dilation completions",
        198: "6 Dilation completions",
        199: "10 Dilation completions",
        200: "14 Dilation completions",
        201: "18 Dilation completions",
        202: "22 Dilation completions",
        203: "26 Dilation completions",
        204: "30 Dilation completions",
        205: "34 Dilation completions",
        206: "38 Dilation completions",
        207: "42 Dilation completions",
        208: "46 Dilation completions",
        209: "50 Dilation completions",
        210: "54 Dilation completions",
        211: "58 Dilation completions",
        212: "62 Dilation completions",
        213: "66 Dilation completions",
        214: "70 Dilation completions",
        215: "74 Dilation completions",
        216: "78 Dilation completions",
        217: "82 Dilation completions",
        218: "86 Dilation completions",
        219: "90 Dilation completions",
        220: "94 Dilation completions",
        221: "98 Dilation completions",
        222: "102 Dilation completions",
        223: "106 Dilation completions",
        224: "110 Dilation completions",
        225: "a C12 Gem",
        226: "a C21 Gem",
        227: "a C22 Gem",
        228: "a C13 Gem",
        229: "a C23 Gem",
        230: "a C31 Gem",
        231: "a C32 Gem",
        232: "a C33 Gem",
        233: "2 Amino Acids",
        234: "4 Amino Acids",
        235: "8 Amino Acids",
        236: "16 Amino Acids",
        237: "32 Amino Acids",
        238: "64 Amino Acids",
        239: "a C14 Gem",
        240: "a C24 Gem",
        241: "a C34 Gem",
        242: "a C41 Gem",
        243: "a C42 Gem",
        244: "a C43 Gem",
        245: "a C44 Gem",
        246: "a C15 Gem",
        247: "a C25 Gem",
        248: "a C35 Gem",
        249: "a C45 Gem",
        250: "a C51 Gem",
        251: "a C52 Gem",
        252: "a C53 Gem",
        253: "a C54 Gem",
        254: "a C55 Gem",
        255: "1e2 Amino Acids",
        256: "1e4 Amino Acids",
        257: "1e8 Amino Acids",
        258: "1e16 Amino Acids",
        259: "1e32 Amino Acids",
        260: "10 Protein",
        261: "1e2 Protein",
        262: "1e4 Protein",
        263: "1e8 Protein",
        264: "1e16 Protein",
        265: "1e32 Protein",
        266: "1e64 Protein",
        267: "1e128 Protein",
        268: "1e256 Protein",
        269: "1e512 Protein",
        270: "1e1,024 Protein",
        271: "1e2,048 Protein",
        272: "1e4,096 Protein",
        273: "1e8,192 Protein",
        274: "1e10,000 Protein",
        275: "1e20,000 Protein",
        276: "1e50,000 Protein",
        277: "1e100,000 Protein",
        278: "1e200,000 Protein",
        279: "1e500,000 Protein",
        280: "1e1,000,000 Protein",
        281: "1e2,000,000 Protein",
        282: "1e5,000,000 Protein",
        283: "1e10,000,000 Protein",
        284: "1e20,000,000 Protein",
        285: "1e50,000,000 Protein",
        286: "1e100,000,000 Protein",
        287: "1e200,000,000 Protein",
        288: "1e500,000,000 Protein",
        289: "1e1e9 Protein",
        290: "1e2e9 Protein",
        291: "1e5e9 Protein",
        292: "1e1e10 Protein",
        293: "1e2e10 Protein",
        294: "1e5e10 Protein",
        295: "1 DNA",
        296: "3 DNA",
        297: "5 DNA",
        298: "17 DNA",
        299: "257 DNA",
        300: "65,537 DNA",
        301: "4,294,967,297 DNA",
        302: "Anti-Hydrogen",
        303: "Anti-Minigame",
        304: "Anti-Carbon",
        305: "Anti-Oxygen",
        306: "Anti-Nitrogen",
        307: "Anti-Inflammatory",
        308: "Anti-Omega",
        309: "a C16 Gem",
        310: "a C26 Gem",
        311: "a C36 Gem",
        312: "a C46 Gem",
        313: "a C56 Gem",
        314: "a C61 Gem",
        315: "a C62 Gem",
        316: "a C63 Gem",
        317: "a C64 Gem",
        318: "a C65 Gem",
        319: "a C66 Gem",
        320: "1.84e19 DNA",
        321: "3.40e38 DNA",
        322: "1.16e77 DNA",
        323: "Anti-Psi",
        324: "Anti-Chi",
        325: "Anti-Phi",
        326: "Anti-Upsilon",
        327: "Anti-Tau",
        328: "Anti-Sigma",
        329: "Anti-Rho",
        330: "a C17 Gem",
        331: "a C27 Gem",
        332: "a C37 Gem",
        333: "a C47 Gem",
        334: "a C57 Gem",
        335: "a C67 Gem",
        336: "a C71 Gem",
        337: "a C72 Gem",
        338: "a C73 Gem",
        339: "a C74 Gem",
        340: "a C75 Gem",
        341: "a C76 Gem",
        342: "a C77 Gem",
        343: "a C18 Gem",
        344: "a C28 Gem",
        345: "a C38 Gem",
        346: "a C48 Gem",
        347: "a C58 Gem",
        348: "a C68 Gem",
        349: "a C78 Gem",
        350: "a C81 Gem",
        351: "a C82 Gem",
        352: "a C83 Gem",
        353: "a C84 Gem",
        354: "a C85 Gem",
        355: "a C86 Gem",
        356: "a C87 Gem",
        357: "a C88 Gem",
        358: "1.34e154 DNA",
        359: "1.80e308 DNA",
        360: "3.23e616 DNA",
        361: "1e1e11 Protein",
        362: "1e2e11 Protein",
        363: "1e5e11 Protein",
        364: "1e1e12 Protein",
        365: "1 Cell",
        366: "2 Cells",
        367: "5 Cells",
        368: "14 Cells",
        369: "42 Cells",
        370: "132 Cells",
        371: "429 Cells",
        372: "1.04e1233 DNA",
        373: "1.09e2466 DNA",
        374: "1.19e4932 DNA",
        375: "1.42e9864 DNA",
        376: "2.00e19,728 DNA",
        377: "4.01e39,456 DNA",
        378: "1.61e78,913 DNA",
        379: "1e1e13 Protein",
        380: "1e3e13 Protein",
        381: "1e1e14 Protein",
        382: "1e3e14 Protein",
        383: "1e1e15 Protein",
        384: "1e3e15 Protein",
        385: "1e1e16 Protein",
        386: "10 Mu",
        387: "100 Mu",
        388: "1e4 Mu",
        389: "1e8 Mu",
        390: "1e16 Mu",
        391: "1e32 Mu",
        392: "1e64 Mu",
        393: "10 Lambda",
        394: "100 Lambda",
        395: "1e4 Lambda",
        396: "1e8 Lambda",
        397: "1e16 Lambda",
        398: "1e32 Lambda",
        399: "1e64 Lambda",
        400: "10 Kappa",
        401: "100 Kappa",
        402: "1e4 Kappa",
        403: "1e8 Kappa",
        404: "1e16 Kappa",
        405: "1e32 Kappa",
        406: "1e64 Kappa",
        407: "10 Iota",
        408: "100 Iota",
        409: "1e4 Iota",
        410: "1e8 Iota",
        411: "1e16 Iota",
        412: "1e32 Iota",
        413: "1e64 Iota",
        414: "1e3e16 Protein",
        415: "1e1e17 Protein",
        416: "1e3e17 Protein",
        417: "1e1e18 Protein",
        418: "1e3e18 Protein",
        419: "1e1e19 Protein",
        420: "1e3e19 Protein",
        421: "10 Stem Cells",
        422: "100 Stem Cells",
        423: "1e4 Stem Cells",
        424: "1e8 Stem Cells",
        425: "1e16 Stem Cells",
        426: "1e32 Stem Cells",
        427: "1e64 Stem Cells",
        428: "1e4 Cells", 
        429: "1e8 Cells", 
        430: "1e16 Cells", 
        431: "1e32 Cells", 
        432: "1e64 Cells", 
        433: "1e128 Cells", 
        434: "1e256 Cells", 
        435: "1e128 Stem Cells",
        436: "1e256 Stem Cells",
        437: "1e512 Stem Cells",
        438: "1e1,024 Stem Cells",
        439: "1e2,048 Stem Cells",
        440: "1e4,096 Stem Cells",
        441: "1e8,192 Stem Cells",
        442: "200 Tokens",
        443: "205 Tokens",
        444: "210 Tokens",
        445: "215 Tokens",
        446: "220 Tokens",
        447: "225 Tokens",
        448: "230 Tokens",
        449: "235 Tokens",
        450: "240 Tokens",
        451: "245 Tokens",
        452: "250 Tokens",
        453: "255 Tokens",
        454: "260 Tokens",
        455: "265 Tokens",
        456: "270 Tokens",
        457: "275 Tokens",
        458: "280 Tokens",
        459: "285 Tokens",
        460: "290 Tokens",
        461: "295 Tokens",
        462: "300 Tokens",
        463: "1e128 Mu",
        464: "1e256 Mu",
        465: "1e512 Mu",
        466: "1e1,024 Mu",
        467: "1e2,048 Mu",
        468: "1e4,096 Mu",
        469: "1e8,192 Mu",
        470: "1e128 Lambda",
        471: "1e256 Lambda",
        472: "1e512 Lambda",
        473: "1e1,024 Lambda",
        474: "1e2,048 Lambda",
        475: "1e4,096 Lambda",
        476: "1e8,192 Lambda",
        477: "1e128 Kappa",
        478: "1e256 Kappa",
        479: "1e512 Kappa",
        480: "1e1,024 Kappa",
        481: "1e2,048 Kappa",
        482: "1e4,096 Kappa",
        483: "1e8,192 Kappa",
        484: "1e128 Iota",
        485: "1e256 Iota",
        486: "1e512 Iota",
        487: "1e1,024 Iota",
        488: "1e2,048 Iota",
        489: "1e4,096 Iota",
        490: "1e8,192 Iota",
        491: "1e512 Cells",
        492: "1e1,024 Cells",
        493: "1e2,048 Cells",
        494: "1e4,096 Cells",
        495: "1e8,192 Cells",
        496: "1e16,384 Cells",
        497: "1e32,768 Cells",
        498: "305 Tokens",
        499: "310 Tokens",
        500: "315 Tokens",
        501: "320 Tokens",
        502: "325 Tokens",
        503: "330 Tokens",
        504: "335 Tokens",
        505: "1e16,384 Stem Cells",
        506: "1e32,768 Stem Cells",
        507: "1e65,536 Stem Cells",
        508: "1e131,072 Stem Cells",
        509: "1e262,144 Stem Cells",
        510: "1e524,288 Stem Cells",
        511: "1e1,048,576 Stem Cells",
        512: "340 Tokens",
        513: "345 Tokens",
        514: "350 Tokens",
        515: "355 Tokens",
        516: "360 Tokens",
        517: "365 Tokens",
        518: "370 Tokens",
        519: "a Tissue upgrade",
        520: "4 Tissue upgrades",
        521: "9 Tissue upgrades",
        522: "16 Tissue upgrades",
        523: "25 Tissue upgrades",
        524: "36 Tissue upgrades",
        525: "49 Tissue upgrades",
        526: "380 Tokens",
        527: "390 Tokens",
        528: "400 Tokens",
        529: "410 Tokens",
        530: "420 Tokens",
        531: "430 Tokens",
        532: "440 Tokens",
        533: "a Token II",
        534: "2 Token II",
        535: "3 Token II",
        536: "4 Token II",
        537: "5 Token II",
        538: "6 Token II",
        539: "7 Token II",
        540: "8 Token II",
        541: "9 Token II",
        542: "10 Token II",
        543: "11 Token II",
        544: "12 Token II",
        545: "13 Token II",
        546: "14 Token II",
        547: "15 Token II",
        548: "16 Token II",
        549: "17 Token II",
        550: "18 Token II",
        551: "19 Token II",
        552: "20 Token II",
        553: "21 Token II",
        554: "22 Token II",
        555: "23 Token II",
        556: "24 Token II",
        557: "25 Token II",
        558: "26 Token II",
        559: "27 Token II",
        560: "28 Token II",
        561: "29 Token II",
        562: "30 Token II",
        563: "31 Token II",
        564: "32 Token II",
        565: "33 Token II",
        566: "34 Token II",
        567: "35 Token II",
        568: "36 Token II",
        569: "37 Token II",
        570: "38 Token II",
        571: "39 Token II",
        572: "40 Token II",
        573: "41 Token II",
        574: "42 Token II",
        575: "a Organ",
        576: "2 Organs",
        577: "3 Organs",
        578: "4 Organs",
        579: "5 Organs",
        580: "6 Organs",
        581: "7 Organs",
        582: "45 Token II",
        583: "50 Token II",
        584: "55 Token II",
        585: "60 Token II",
        586: "65 Token II",
        587: "70 Token II",
        588: "75 Token II",
}









